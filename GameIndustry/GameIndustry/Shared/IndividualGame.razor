@if (!IsTable && @Game != null)
{
    <div class="row text-center alert alert-info">
        <div class="col">
            <p>@Game.Name</p>
            <p>@Game.Genre</p>
            <p>@Game.ReleaseDate.ToString("dd.MM.yyyy")</p>
        </div>
    </div>
    if (DisplayButtons)
    {
        <div class="row">
            <div class="col">
                @*<button class="btn-danger" @onclick="Delete">Delete</button>*@
                <button class="btn-primary" @onclick="SwitchGame">Switch The Game</button>

            </div>

            <div class="col">
               @* @if (message != null)
                {
                    <span class="text-danger">@message</span>
                    message = null;
                }*@
            </div>
        </div>
    }
}
else
{
    @if (Game != null)
    {
        <tr>
            <td>@Game.Name</td>
            <td>@Game.Genre</td>
            <td>@Game.ReleaseDate.ToString("dd.MM.yyyy")</td>
            <td>
                @if (DisplayButtons)
                {
                    @*<button class="btn-danger" @onclick="Delete">Delete</button>*@
                    <button class="btn-danger" @onclick="(()=>DeleteGame.InvokeAsync(Game))">Delete</button>

                    @* @if (message != null)
                {
                    <span class="text-danger" pl-3>@message</span>
                    message = null;
                }*@
                }
            </td>
        </tr>
    }
}


@code {
    [Parameter] public Game Game { get; set; }
    [Parameter] public bool IsTable { get; set; }

    [Parameter] public bool DisplayButtons { get; set; } = false;

    //private string message;

    //void Delete()
    //{
    //    message = $"Game {@Game.Name} deleted";
    //}

    [Parameter] public EventCallback<Game> DeleteGame { get; set; }
    [Parameter] public EventCallback SwitchGame { get; set; }
}
